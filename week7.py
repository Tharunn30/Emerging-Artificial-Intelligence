# -*- coding: utf-8 -*-
"""Week7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eJindO-QAqo1IeAqImPFIjlH3lFDFi3S
"""

from difflib import SequenceMatcher
import re

def clean_text(text):
    # Remove special characters and extra whitespace
    text = re.sub(r'[^\w\s]', '', text.lower())
    text = ' '.join(text.split())
    return text

def calculate_similarity(text1, text2):
    # Clean the input texts
    cleaned_text1 = clean_text(text1)
    cleaned_text2 = clean_text(text2)

    # Create SequenceMatcher object
    matcher = SequenceMatcher(None, cleaned_text1, cleaned_text2)

    # Calculate similarity ratio and convert to percentage
    similarity_ratio = matcher.ratio()
    similarity_percentage = round(similarity_ratio * 100, 2)

    return similarity_percentage

def plagiarism_detector():
    print("Welcome to Plagiarism Detector")
    print("=============================")

    while True:
        # Get first text
        print("\nPlease enter the first text (or press Enter twice to quit):")
        text1 = ""
        while True:
            line = input()
            if line == "":
                if text1 == "":
                    return  # Exit if user enters empty text twice
                break
            text1 += line + "\n"

        # Get second text
        print("\nPlease enter the second text to compare:")
        text2 = ""
        while True:
            line = input()
            if line == "":
                break
            text2 += line + "\n"

        # Calculate and display results
        similarity = calculate_similarity(text1, text2)

        print("\nResults:")
        print(f"Similarity Percentage: {similarity}%")

        # Feedback based on similarity
        if similarity > 80:
            print("High similarity detected - Possible plagiarism!")
        elif similarity > 50:
            print("Moderate similarity detected - Review recommended")
        else:
            print("Low similarity - Likely original content")

        # Ask if user wants to check another pair
        print("\nWould you like to check another pair? (yes/no)")
        if input().lower() != 'yes':
            break

    print("Thank you for using Plagiarism Detector!")

if __name__ == "__main__":
    try:
        plagiarism_detector()
    except Exception as e:
        print(f"An error occurred: {e}")\

from difflib import SequenceMatcher
import re
import os

# Optional: Install PyPDF2 with `pip install PyPDF2` for PDF support
try:
    from PyPDF2 import PdfReader
    PDF_SUPPORT = True
except ImportError:
    PDF_SUPPORT = False
    print("PDF support unavailable. Install PyPDF2 with 'pip install PyPDF2' for PDF functionality.")

def clean_text(text):
    # Remove special characters and extra whitespace
    text = re.sub(r'[^\w\s]', '', text.lower())
    text = ' '.join(text.split())
    return text

def calculate_similarity(text1, text2):
    cleaned_text1 = clean_text(text1)
    cleaned_text2 = clean_text(text2)
    matcher = SequenceMatcher(None, cleaned_text1, cleaned_text2)
    similarity_ratio = matcher.ratio()
    similarity_percentage = round(similarity_ratio * 100, 2)
    return similarity_percentage

def read_file(filepath):
    """Read content from .txt or .pdf files."""
    if not os.path.exists(filepath):
        raise FileNotFoundError(f"File {filepath} not found.")

    ext = os.path.splitext(filepath)[1].lower()

    if ext == '.txt':
        with open(filepath, 'r', encoding='utf-8') as file:
            return file.read()

    elif ext == '.pdf' and PDF_SUPPORT:
        reader = PdfReader(filepath)
        text = ""
        for page in reader.pages:
            text += page.extract_text() or ""
        return text

    else:
        raise ValueError(f"Unsupported file format: {ext}. Use .txt or .pdf (with PyPDF2 installed).")

def plagiarism_detector():
    print("Welcome to Plagiarism Detector")
    print("=============================")

    while True:
        print("\nOptions:")
        print("1. Enter text manually")
        print("2. Upload a .txt or .pdf file")
        print("3. Quit")
        choice = input("Choose an option (1-3): ").strip()

        if choice == '3':
            break

        # Get first text
        print("\nProvide the first text:")
        if choice == '1':
            print("(Press Enter twice to finish)")
            text1 = ""
            while True:
                line = input()
                if line == "":
                    if text1 == "":
                        print("No text entered. Exiting...")
                        return
                    break
                text1 += line + "\n"
        elif choice == '2':
            filepath = input("Enter the path to the first file (.txt or .pdf): ").strip()
            try:
                text1 = read_file(filepath)
            except Exception as e:
                print(f"Error: {e}")
                continue

        # Get second text
        print("\nProvide the second text to compare:")
        if choice == '1':
            print("(Press Enter twice to finish)")
            text2 = ""
            while True:
                line = input()
                if line == "":
                    break
                text2 += line + "\n"
        elif choice == '2':
            filepath = input("Enter the path to the second file (.txt or .pdf): ").strip()
            try:
                text2 = read_file(filepath)
            except Exception as e:
                print(f"Error: {e}")
                continue

        # Calculate and display results
        similarity = calculate_similarity(text1, text2)

        print("\nResults:")
        print(f"Similarity Percentage: {similarity}%")

        if similarity > 80:
            print("High similarity detected - Possible plagiarism!")
        elif similarity > 50:
            print("Moderate similarity detected - Review recommended")
        else:
            print("Low similarity - Likely original content")

        # Ask to continue
        print("\nWould you like to check another pair? (yes/no)")
        if input().lower() != 'yes':
            break

    print("Thank you for using Plagiarism Detector!")

if __name__ == "__main__":
    try:
        plagiarism_detector()
    except Exception as e:
        print(f"An error occurred: {e}")